spring.application.name=poc-kafka-service

#################### KAFKA

# common configs
# Required connection configs for Kafka producer, consumer, and admin
spring.kafka.properties.bootstrap.servers=${KAFKA_BOOTSTRAP_HOST}:${KAFKA_BOOTSTRAP_PORT}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.schema.registry.url=${KAFKA_SCHEMA_REGISTRY_URL}
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.basic.auth.user.info=${KAFKA_USERNAME}:${KAFKA_PASSWORD}

# prevent application shutdown on JSON deserialization error
spring.kafka.properties.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler

spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule   required username='${KAFKA_JAAS_USERNAME}'   password='${KAFKA_JAAS_PASSWORD}';
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.client.dns.lookup=use_all_dns_ips
spring.kafka.properties.acks=all

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000

# kafka streams properties
spring.kafka.streams.application-id=\${spring.application.name}
# Bindings
spring.cloud.stream.function.definition=processMachineStatus

# Cloud Stream
spring.cloud.stream.kafka.streams.binder.application-id=\${spring.application.name}
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

spring.kafka.streams.properties.commit.interval.ms=0
spring.kafka.streams.properties.replication.factor=3

spring.cloud.stream.bindings.processMachineStatus-in-0.destination=${PRODUCT_STATUS_TOPIC}
spring.cloud.stream.bindings.processMachineStatus-in-1.destination=${PRODUCT_DATA_TOPIC}
spring.cloud.stream.bindings.processMachineStatus-out-0.destination=${PRODUCT_OUT_TOPIC}

spring.cloud.stream.kafka.streams.bindings.processMachineStatus-in-0.consumer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.processMachineStatus-in-0.consumer.start-offset=earliest
spring.cloud.stream.kafka.streams.bindings.processMachineStatus-in-0.consumer.enable-dlq=true

spring.cloud.stream.kafka.streams.bindings.processMachineStatus-in-1.consumer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.processMachineStatus-in-1.consumer.start-offset=earliest
spring.cloud.stream.kafka.streams.bindings.processMachineStatus-in-1.consumer.enable-dlq=true


spring.cloud.stream.kafka.streams.bindings.processMachineStatus-out-0.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.processMachineStatus-out-0.producer.value-serde=io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
#spring.cloud.stream.kafka.binder.producer-properties.schema.registry.url=${KAFKA_SCHEMA_REGISTRY_URL}